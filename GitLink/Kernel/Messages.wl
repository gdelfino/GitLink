(* ::Package:: *)

General::badrepo = "GitLink tried to access a repo which is invalid.";
General::badremote = "GitLink tried to access a remote which is invalid.";
GitAddRemote::badremotename = "GitAddRemote failed because the invalid remote name `1` was given.";
GitStatus::barerepo = "GitStatus was called on a bare repo.";
General::fetchfailed = "A git fetch operation failed with the error \"`1`\".";
General::noconnect = "The git remote failed to connect with the error \"`1`\".";
General::downloadfailed = "The git remote connected, but the download operation failed with the error \"`1`\".";
General::updatetipsfailed = "The git fetch operation failed to update the branch references.";
General::badcommitish = "GitLink expected a valid commit specification.";
General::noparent = "GitLink failed to create a valid commit because the parent commit was invalid.";
General::noindex = "The operation failed because the git index could not be found.";
General::noworkingtree = "The operation failed because the git working tree could not be found.";
General::nomessage = "GitLink failed to create a valid commit because a log message was not provided.";
General::gitcommiterror = "A git commit failed.";
General::cantwritetree = "GitLink failed to write a tree.";
General::cantwriteindex = "GitLink failed to update the index.";
General::nodefaultusername = "GitLink failed to create a valid commit because there is no default username. Configure a username in git by calling, e.g., 'git config --global user.name \"John Doe\"', and 'git config --global user.email \"johndoe@example.com\".";
GitPush::uploadfailed = "GitPush failed to upload its objects to the remote.";
General::refnotpushed = "Git failed to push a reference with the message \"`1`\"";
GitCreateBranch::invalidspec = "GitCreateBranch failed to create a branch because it was given the invalid branch name \"`1`\".";
GitCreateBranch::refexists = "GitCreateBranch failed to create a branch because it was given the branch name \"`1`\", which already exists.";
GitCreateBranch::branchnotcreated = "GitCreateBranch failed with the error \"`1`\".";
General::nolocalbranch = "The operation failed because there is no local branch named \"`1`\".";
General::noremotebranch = "The operation failed because there is no remote branch named \"`1`\".";
GitSetUpstreamBranch::setupstreamfailed = "GitSetUpstreamBranch failed to set the upstream branch of \"`1`\" to \"`2`\".";
GitUpstreamBranch::upstreamfailed = "GitUpstreamBranch failed on the branch \"`1`\".";
General::invalidsource = "An invalid source was used for a merging operation.";
General::invaliddest = "An invalid destination was used for a merging operation.";
General::notree = "GitLink failed to create a valid commit because the tree was invalid.";
General::noblob = "The reference does not point to a git blob.";
General::noref = "The reference `2` does not point to an object in the repo `1`.";
General::nopath = "The path `1` was not found in the entities referenced by `2`.";
General::badsha = "A standard git SHA was expected.";
General::gitoperationfailed = "A git operation failed with the message \"`1`\".";
General::checkoutfailed = "A checkout failed with the message \"`1`\".";
GitWriteTree::badtreeentry = "GitWriteTree was given a bad tree specification.";
General::inconsistentrepos = "The operation failed because the given objects do not match the specified repo.";
General::mismatchedgitobj = "The git object does not match the repo specified for the operation.";
General::repoexists = "The operation failed because it would overwrite an existing repo.";
General::checkoutconflict = "The git checkout operation failed because it would lead to a conflict with the files presently in the working tree directory.";
General::badformat = "The git blob cannot be imported using the format \"`1`\".";
General::invalidarguments = "The function was given invalid arguments.";
General::nosrcdir = "The remote URL \"`1`\" does not exist or cannot be accessed for git operations.";
GitPull::detachedhead = "GitPull cannot be performed on a detached head.";
GitPull::noupstream = "GitPull failed to work because no upstream branch is defined for the `1`.";
General::noancfile = "GitLink could not determine an ancestor file for resolving conflicts while merging.";
General::noconfunc = "A git merge failed, and no conflict functions were found to address the failure.";
General::incompatexprs = "Encountered inconsistent heads `1` while attempting the \"ChooseBothArguments\" merge handler.";
